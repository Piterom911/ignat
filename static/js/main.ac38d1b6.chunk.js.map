{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","avatar","src","alt","wrapper","name","data","text","message","time","messageData","HW1","Affair","affair","priority","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","map","a","affairs","filters","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","main","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onAddUserKeyPressHandler","inputClass","value","onKeyPress","onChange","input","greetingCount","errorText","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","e","currentTarget","key","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","inputWrapper","superInput","SuperButton","red","finalClassName","default","mainButton","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","iconCheck","HW4","setText","showAlert","setChecked","column","blue","disabled","App","heading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ac38d1b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__1WyRG\",\"name\":\"Affairs_name__3c8HQ\",\"priority\":\"Affairs_priority__2cniB\",\"affairs\":\"Affairs_affairs__2DCpY\",\"high\":\"Affairs_high__2yQ-A\",\"middle\":\"Affairs_middle__Un8r8\",\"low\":\"Affairs_low__2DeGA\",\"delete\":\"Affairs_delete__3Y8sY\",\"filters\":\"Affairs_filters__2CNhM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__3lCA1\",\"wrapper\":\"Message_wrapper__2pvPq\",\"avatar\":\"Message_avatar__1A4sE\",\"name\":\"Message_name__GqT62\",\"text\":\"Message_text__1ONyy\",\"time\":\"Message_time__SicFM\",\"data\":\"Message_data__1UgEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2B-aw\",\"error\":\"Greeting_error__2h1X8\",\"errorText\":\"Greeting_errorText__1ITy7\",\"greetingCount\":\"Greeting_greetingCount__2EffS\",\"input\":\"Greeting_input__3tqtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"SuperInputText_inputWrapper__30lLc\",\"superInput\":\"SuperInputText_superInput__cyIw4\",\"errorInput\":\"SuperInputText_errorInput__3uucz\",\"error\":\"SuperInputText_error__ZuRjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__a0LLA\",\"label\":\"SuperCheckbox_label__THGVk\",\"iconCheck\":\"SuperCheckbox_iconCheck__3UV9S\",\"spanClassName\":\"SuperCheckbox_spanClassName__34lNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__TsUWk\",\"mainButton\":\"SuperButton_mainButton__1LpuC\",\"red\":\"SuperButton_red__2P1d3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__TlFXN\",\"App\":\"App_App__1ooFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2j58U\",\"column\":\"HW4_column__2ORdp\",\"testSpanError\":\"HW4_testSpanError__1IbJf\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsTypes = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsTypes) {\r\n    return (\r\n        <div className={s.Message}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.wrapper}>\r\n                <h3 className={s.name}>{props.name}</h3>\r\n                <div className={s.data}>\r\n                    <p className={s.text}>{props.message} <span className={s.time}>{props.time}</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Roman',\r\n    message: 'npm start нажимал? npm start нажимал?npm start нажимал? npm start нажимал? ',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div className='wrapper'>\r\n            <h2>homework 1</h2>\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }\r\n\r\n    return (\r\n        <div className={`${s.wrapper} ${s[props.affair.priority]}`}>\r\n            <div className={s.name}>{props.affair.name}</div>\r\n            <div className={s.priority}>{props.affair.priority}</div>\r\n            <button className={s.delete} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (type: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter('all') }\r\n    const setHigh = () => { props.setFilter('high') }\r\n    const setMiddle = () => { props.setFilter('middle') }\r\n    const setLow = () => { props.setFilter('low') }\r\n\r\n    return (\r\n        <div className={s.affairs}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={s.filters}>\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if(filter === 'all') return affairs\r\n    return affairs.filter( a => a.priority === filter )\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    return affairs.filter( a => _id !== a._id )\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div className={`${s.main} wrapper`}>\r\n            <h2>homework 2</h2>\r\n            <hr/>\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n    onAddUserKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onAddUserKeyPressHandler} ) => {\r\n    const inputClass = error ? s.error : null\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onKeyPress={onAddUserKeyPressHandler} onChange={setNameCallback} className={`input ${s.input} ${inputClass}`}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span className={s.greetingCount}>{totalUsers}</span>\r\n            <p className={s.errorText}>{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport { v1 } from 'uuid';\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (id: string) => void\r\n}\r\n\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            alert(`Hello ${name}!`)\r\n            setError('')\r\n            addUserCallback(name)\r\n            setName('')\r\n        }\r\n        else setError('Should contain any word!')\r\n    }\r\n\r\n    const onAddUserKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter') addUser()\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onAddUserKeyPressHandler={onAddUserKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        setUsers([...users, {_id: v1(), name}])\r\n    }\r\n\r\n    return (\r\n        <div className={`wrapper`}>\r\n            <h2>homework 3</h2>\r\n            <hr/>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${className} ${error ? s.errorInput : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <p className={s.inputWrapper}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={`${s.superInput} ${finalInputClassName}`}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.mainButton} ${className ? className : ''}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <div className={s.iconCheck}></div>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={'wrapper'}>\r\n            <h2>homework 4</h2>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <h1 className={s.heading}>react homeworks:</h1>\r\n            <HW4/>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}